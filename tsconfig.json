{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Basic Options */
    "incremental": true /* Save .tsbuildinfo files to allow for incremental compilation of projects. */,
    "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "module": "commonjs" /* Specify what module code is generated. */,
    "outDir": "build" /* Specify an output folder for all emitted files. */,
    "pretty": true,
    "removeComments": true /* Disable emitting comments. */,
    "resolveJsonModule": true,

    /* Strict Type-Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
    "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
    "noImplicitThis": false /* Enable error reporting when 'this' is given the type 'any'. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,

    /* Module Resolution Options */

    "moduleResolution": "node",
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "baseUrl": "./src" /* Specify the base directory to resolve non-relative module names. */,
    "paths": {
      "@exceptions/*": ["exceptions/*"],
      "@controllers/*": ["controllers/*"],
      "@interfaces/*": ["src/interfaces/*"],
      "@middlewares/*": ["middlewares/*"],
      "@routes/*": ["routes/*"],
      "@services/*": ["services/*"],
      "@helpers/*": ["helpers/*"],
      "@config/*": ["config/*"]
    }
  },
  "include": ["./src/**/*", "./tests/**/*", "commitlint.config.js"],
  "exclude": ["node_modules"]
}
